{"remainingRequest":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/src/components/fundDetails/FundOverview.vue?vue&type=style&index=0&id=b3eff6c0&scoped=true&lang=css&","dependencies":[{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/src/components/fundDetails/FundOverview.vue","mtime":1643970464511},{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/css-loader/dist/cjs.js","mtime":1641967408104},{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1641967405402},{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/postcss-loader/src/index.js","mtime":1641967406590},{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/cache-loader/dist/cjs.js","mtime":1641967408297},{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/vue-loader/lib/index.js","mtime":1641967405306}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojZGl2aWRlciB7CiAgcGFkZGluZy1ib3R0b206IDIwcHg7Cn0KCi5lbnRpcmUtcGFnZSB7CiAgYmFja2dyb3VuZDogI2MzYmRjYjsKfQo="},{"version":3,"sources":["FundOverview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;;AAEA;AACA;AACA","file":"FundOverview.vue","sourceRoot":"src/components/fundDetails","sourcesContent":["<template>\n  <v-container>\n    <v-main v-if=\"getConnectedAccount\">\n     <v-row v-if=\"getCollectionDetails != {}\">\n      <v-col cols=\"12\" sm=\"7\" md=\"9\" >\n        <v-row no-gutters style=\"margin-top: 25px;\" align=\"center\" justify=\"center\">\n          <h1>{{ getCollectionDetails.name }}</h1>\n        </v-row>\n        <v-divider id=\"divider\"></v-divider>\n           <v-row v-if=\"getNFTList = null\" style=\"text-align:center;\" align=\"center\" justify=\"center\">\n             No NFTs present in the collection\n           </v-row>\n        <v-row>\n          <v-col v-for=\"(nft) in getNFTList\" :key=\"nft.name\" cols=\"4\">\n         <!--   <NFTCard\n              :nft=\"getNFTListInFund[index - 1]\"\n              :index=\"index - 1\"\n              :owner=\"getCollectionDetails.ownerAddress\"\n              :connectedAccount=\"getConnectedAccount\"\n            />-->\n            <NFTCard :nft=\"nft\"/>\n          </v-col>\n          <!-- <v-col cols=\"4\" v-if=\"getConnectedAccount == getCollectionDetails.ownerAddress\">\n            <BidOnAuction />\n          </v-col> -->\n        </v-row>\n      </v-col>\n\n      <v-col cols=\"5\" md=\"3\" >\n        <FundDetails :owner=\"getCollectionDetails.ownerAddress\" :connectedAccount=\"getConnectedAccount\"/>\n      </v-col>\n     </v-row>\n     <v-row v-else style=\"text-align:center;\">\n      Loading NFT's present in the fund. Please wait!\n     </v-row>\n    </v-main>\n    <v-main v-else style=\"text-align:center;\">\n      Connect to metamask wallet to see NFTs. The button is in the top right of the page !\n    </v-main>\n \n  </v-container>\n</template>\n\n<style scoped>\n#divider {\n  padding-bottom: 20px;\n}\n\n.entire-page {\n  background: #c3bdcb;\n}\n</style>\n\n<script>\nimport NFTCard from \"./NFTCard.vue\";\nimport AddNFTCard from \"./AddNFTCard.vue\";\nimport FundDetails from \"./FundDetails.vue\";\nimport BidOnAuction from \"./BidOnAuction.vue\";\n\n\nexport default {\n  components: {\n    FundDetails,\n    NFTCard,\n    AddNFTCard,\n    BidOnAuction\n  },\n  computed: {\n\n    getCollectionDetails() {\n      var details = this.$store.state.collectionDetails;\n      if (details == null || details == {}) {\n        return {};\n      } \n      return details;\n    },\n    /*\n    getNFTListInFund() {\n      if (this.$store.state.nftListInFund == null || this.$store.state.nftListInFund == {}) return [];\n      return this.$store.state.nftListInFund[this.$route.query.contractId];\n    },*/\n    getNFTList(){\n      return this.$store.state.nftDetails;\n    },\n    getConnectedAccount() {\n      return this.$store.state.account;\n    },\n    getCollectionDetais() {\n      return this.$store.state.collectionDetails;\n    }\n    \n  },\n  mounted() {\n    this.$store.dispatch(\"getMaticBalance\");\n    this.$store.dispatch(\"getCollectionDetails\", { collectionContractId: this.$route.query.contractId, collection_id: this.$route.query.collectionId } );\n    this.$store.dispatch(\"getNFTsInAddress\", { address: this.$route.query.contractId });\n    this.$store.dispatch(\"loadNFTs\", {address: this.$route.query.contractId, collection_id: this.$route.query.collectionId});\n  },\n};\n</script>\n"]}]}