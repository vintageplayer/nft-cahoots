{"remainingRequest":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/src/components/FundCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/src/components/FundCard.vue","mtime":1643969857614},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/cache-loader/dist/cjs.js","mtime":1641967408297},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/babel-loader/lib/index.js","mtime":1641967408435},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/cache-loader/dist/cjs.js","mtime":1641967408297},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/vue-loader/lib/index.js","mtime":1641967405306}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBjb25zdGFudHMgZnJvbSAiLi4vY29uc3QuanMiOwoKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7IGNvbGxlY3Rpb246IE9iamVjdCB9LAogIGNvbXB1dGVkOiB7CiAgICBnZXRJbWcoKSB7CiAgICAgIHJldHVybiB0aGlzLiRwcm9wcy5jb2xsZWN0aW9uLmltYWdlX3VybDsKICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRJbWdVcmwoKSB7CiAgICAgIHJldHVybiByZXF1aXJlKCIuL2Fzc2V0cy8iICsgY29uc3RhbnRzLklDT05TW3RoaXMuJHByb3BzLmNvbGxlY3Rpb24uY2hhaW5dKTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["FundCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FundCard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <a :href=\"`/Funds?contractId=${collection.contract_id}&collectionId=${collection.collection_id}`\">\n    <v-card width=\"400\">\n      <v-container>\n        <v-row align=\"center\">\n          <v-img :src=\"getImg\" height=\"300\" width=\"auto\">\n            <span class=\"sym\">${{ collection.symbol }}</span>\n            <v-btn small class=\"chain\" elevation=\"2\" fab>\n              <!-- hardcoded for now, need to check blockchain before chosing image, switch case?-->\n              <img width=\"50\" style=\"border-radius: 25px;\" :src=\"getImgUrl()\" />\n            </v-btn>\n          </v-img>\n        </v-row>\n\n        <v-row elevation=\"5\" justify=\"center\">\n          <v-card-title>{{ collection.name }}</v-card-title>\n          <v-btn v-if=\"collection.verified\" v-show=\"true\" x-small elevation=\"2\" fab class=\"logo\">\n            <img width=\"24\" style=\"border-radius: 25;\" src=\"./assets/verified.png\" />\n          </v-btn>\n        </v-row>\n\n        <v-row>\n          <v-divider></v-divider>\n        </v-row>\n\n        <v-row>\n          <v-col class=\"next-r\"> Price </v-col>\n          <v-col class=\"next-r\"> Member </v-col>\n          <v-col class=\"next-r\"> Items </v-col>\n          <v-col class=\"next-r\"> Est. Value </v-col>\n        </v-row>\n\n        <v-row>\n          <v-col class=\"next-r\"> {{ collection.price.amount }} {{ collection.price.type }} </v-col>\n          <v-col class=\"next-r\"> {{ collection.members }} </v-col>\n          <v-col class=\"next-r\"> {{ collection.items }} </v-col>\n          <v-col class=\"next-r\"> {{ collection.est_value.currency + collection.est_value.amount }} </v-col>\n        </v-row>\n      </v-container>\n    </v-card>\n  </a>\n</template>\n\n<style scoped>\n.next-r {\n  left: 0%;\n  position: relative;\n  text-align: center;\n}\n.next-l {\n  right: 0%;\n  position: relative;\n  text-align: center;\n}\n\n.npdg {\n  position: relative;\n  top: -37px;\n}\n.logo {\n  position: relative;\n  top: 13px;\n}\n\n.sym {\n  font-weight: bold;\n  position: absolute;\n  top: 8%;\n  right: 4%;\n}\n.chain {\n  position: absolute;\n  top: 5%;\n  left: 5%;\n}\n\n.right-col {\n  text-align: center;\n}\n\n.left-col {\n  text-align: center;\n}\n</style>\n\n<script>\nimport constants from \"../const.js\";\n\nexport default {\n  props: { collection: Object },\n  computed: {\n    getImg() {\n      return this.$props.collection.image_url;\n    },\n  },\n  methods: {\n    getImgUrl() {\n      return require(\"./assets/\" + constants.ICONS[this.$props.collection.chain]);\n    },\n  },\n};\n</script>\n"]}]}