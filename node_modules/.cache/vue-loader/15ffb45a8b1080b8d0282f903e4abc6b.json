{"remainingRequest":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/src/components/voting/Post.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/src/components/voting/Post.vue","mtime":1641967012146},{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/cache-loader/dist/cjs.js","mtime":1641967408297},{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/babel-loader/lib/index.js","mtime":1641967408435},{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/cache-loader/dist/cjs.js","mtime":1641967408297},{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/vue-loader/lib/index.js","mtime":1641967405306}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogWyJwb3N0SW5kZXgiXSwKICBkYXRhOiAoKSA9PiAoewogICAgZGlhbG9nOiBmYWxzZSwKICB9KSwKICBjb21wdXRlZDogewogICAgZ2V0UG9zdHMoKSB7CiAgICAgIGlmICh0aGlzLiRyb3V0ZS5xdWVyeS5jb250cmFjdElkIGluIHRoaXMuJHN0b3JlLnN0YXRlLnBvc3RMaXN0KSB7CiAgICAgICAgY29uc29sZS5sb2coJ2luc2lkZSBnZXQgUG9zdHMnLCB0aGlzLiRzdG9yZS5zdGF0ZS5wb3N0TGlzdFt0aGlzLiRyb3V0ZS5xdWVyeS5jb250cmFjdElkXSk7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnBvc3RMaXN0W3RoaXMuJHJvdXRlLnF1ZXJ5LmNvbnRyYWN0SWRdOwogICAgICB9CiAgICAgIHJldHVybiBbXTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHBsYWNlVm90ZShpc1ZvdGluZ0Zvciwgdm90ZURldGFpbHMpIHsKICAgICAgY29uc29sZS5sb2codm90ZURldGFpbHMpOwogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgicGxhY2VWb3RlIiwge2lzVm90aW5nRm9yLCB2b3RlQWRkcmVzczogdm90ZURldGFpbHMudm90ZUFkZHJlc3MsIGZ1bmRBZGRyZXNzOiB0aGlzLiRyb3V0ZS5xdWVyeS5jb250cmFjdElkfSk7CiAgICAgIHRoaXMuZGlhbG9nID0gZmFsc2U7CiAgICB9LAogIH0KfTsK"},{"version":3,"sources":["Post.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Post.vue","sourceRoot":"src/components/voting","sourcesContent":["<template>\n  <v-dialog v-model=\"dialog\" persistent max-width=\"600\">\n    <template v-slot:activator=\"{ on, attrs }\">\n      <v-banner single-line>\n        {{ getPosts[postIndex].desc }}\n        <v-spacer></v-spacer>\n        <template v-slot:actions>\n          <v-btn text color=\"primary\" v-bind=\"attrs\" v-on=\"on\">\n            See Details\n          </v-btn>\n        </template>\n      </v-banner>\n    </template>\n    <v-card>\n      <v-card-title class=\"text-h5\">\n        Vote Stats\n      </v-card-title>\n      <v-card-text>\n        <v-container>\n          <v-row>\n            <v-col>\n              Total Votes casted: {{(parseInt(getPosts[postIndex].totalYesVotes) + parseInt(getPosts[postIndex].totalNoVotes))}}\n            </v-col>\n            <v-col>\n              Votes for the motion: {{parseInt(getPosts[postIndex].totalYesVotes * 100)/(parseInt(getPosts[postIndex].totalYesVotes) + parseInt(getPosts[postIndex].totalNoVotes))}}%\n            </v-col>\n          </v-row>\n          <v-row>\n            <v-col>\n              You Voted: For the motion\n            </v-col>\n          </v-row>\n        </v-container>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"green darken-1\" text @click=\"placeVote(true ,getPosts[postIndex])\">\n          Vote For\n        </v-btn>\n        <v-btn color=\"green darken-1\" text @click=\"placeVote(false ,getPosts[postIndex])\">\n          Vote Against\n        </v-btn>\n        <v-btn color=\"green darken-1\" text @click=\"dialog = false\">\n          Reset your votes\n        </v-btn>\n        <v-btn color=\"green darken-1\" text @click=\"dialog = false\">\n          Close\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  props: [\"postIndex\"],\n  data: () => ({\n    dialog: false,\n  }),\n  computed: {\n    getPosts() {\n      if (this.$route.query.contractId in this.$store.state.postList) {\n        console.log('inside get Posts', this.$store.state.postList[this.$route.query.contractId]);\n        return this.$store.state.postList[this.$route.query.contractId];\n      }\n      return [];\n    }\n  },\n  methods: {\n    placeVote(isVotingFor, voteDetails) {\n      console.log(voteDetails);\n      this.$store.dispatch(\"placeVote\", {isVotingFor, voteAddress: voteDetails.voteAddress, fundAddress: this.$route.query.contractId});\n      this.dialog = false;\n    },\n  }\n};\n</script>\n"]}]}