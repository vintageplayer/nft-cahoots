{"remainingRequest":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/web3modal-vue/src/components/Modal.vue?vue&type=style&index=0&id=92ebf5e4&scoped=true&lang=css&","dependencies":[{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/web3modal-vue/src/components/Modal.vue","mtime":1641967406776},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/css-loader/dist/cjs.js","mtime":1641967408104},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1641967405402},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/postcss-loader/src/index.js","mtime":1641967406590},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/cache-loader/dist/cjs.js","mtime":1641967408297},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/vue-loader/lib/index.js","mtime":1641967405306}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmZhZGUtZW50ZXItYWN0aXZlLCAuZmFkZS1sZWF2ZS1hY3RpdmUgewogIHRyYW5zaXRpb246IG9wYWNpdHkgLjI1czsKfQoKLmZhZGUtZW50ZXIsIC5mYWRlLWxlYXZlLXRvIHsKICBvcGFjaXR5OiAwOwp9Cg=="},{"version":3,"sources":["Modal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA;AACA;;AAEA;AACA;AACA","file":"Modal.vue","sourceRoot":"node_modules/web3modal-vue/src/components","sourcesContent":["<template>\n  <transition name=\"fade\">\n    <SLightbox\n        :class=\"MODAL_LIGHTBOX_CLASSNAME\"\n        :offset=\"lightboxOffset\"\n        :opacity=\"lightboxOpacity\"\n        :show=\"show\"\n        ref=\"lightboxRef\"\n        v-show=\"show\"\n    >\n      <SModalContainer :class=\"MODAL_CONTAINER_CLASSNAME\" :show=\"show\">\n        <SHitbox :class=\"MODAL_HITBOX_CLASSNAME\" @click=\"onClose\"/>\n        <SModalCard\n            :class=\"MODAL_CARD_CLASSNAME\"\n            :show=\"show\"\n            :themeColors=\"themeColors\"\n            :maxWidth=\"userOptions.length < 3 ? 500 : 800\"\n        >\n          <template v-for=\"(provider,index) in userOptions\">\n            <Provider\n                v-if=\"provider\"\n                :key=\"index\"\n                :name=\"provider.name\"\n                :logo=\"provider.logo\"\n                :description=\"provider.description\"\n                :theme-colors=\"themeColors\"\n                @onClick=\"provider.onClick\"\n            />\n          </template>\n        </SModalCard>\n      </SModalContainer>\n    </SLightbox>\n  </transition>\n</template>\n\n<script>\nimport styled from 'vue-styled-components'\nimport {\n  MODAL_LIGHTBOX_CLASSNAME,\n  MODAL_CONTAINER_CLASSNAME,\n  MODAL_HITBOX_CLASSNAME,\n  MODAL_CARD_CLASSNAME\n} from \"../constants\";\nimport Provider from \"./Provider.vue\";\n\nconst SLightbox = styled('div', {offset: Number, opacity: Number, show: Boolean})`\n  text-align: center;\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  margin-left: -50vw;\n  top: ${({offset}) => (offset ? `-${offset}px` : 0)};\n  left: 50%;\n  z-index: 2;\n  will-change: opacity;\n  background-color: ${({opacity}) => {\n    let alpha = 0.4;\n    if (typeof opacity === \"number\") {\n      alpha = opacity;\n    }\n    return `rgba(0, 0, 0, ${alpha})`;\n  }};\n\n  pointer-events: ${({show}) => (show ? \"auto\" : \"none\")};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  & * {\n    box-sizing: border-box !important;\n  }\n`;\nconst SModalContainer = styled('div', {show: Boolean})`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  padding: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  pointer-events: ${({show}) => (show ? \"auto\" : \"none\")};\n`;\nconst SHitbox = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\nconst SModalCard = styled('div', {themeColors: Object, show: Boolean, maxWidth: Number})`\n  position: relative;\n  width: 100%;\n  background-color: ${({themeColors}) => themeColors.background};\n  border-radius: 12px;\n  margin: 10px;\n  padding: 0;\n\n  pointer-events: ${({show}) => (show ? \"auto\" : \"none\")};\n\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\n  max-width: ${({maxWidth}) => (maxWidth ? `${maxWidth}px` : \"800px\")};\n  min-width: fit-content;\n  max-height: 100%;\n  overflow: auto;\n  @media screen and (max-width: 768px) {\n    max-width: ${({maxWidth}) => (maxWidth ? `${maxWidth}px` : \"500px\")};\n    grid-template-columns: 1fr;\n  }\n\n}\n`;\nexport default {\n  name: \"Modal\",\n  props: [\"show\", \"themeColors\", \"userOptions\", \"lightboxOpacity\"],\n  components: {SModalCard, SHitbox, SModalContainer, SLightbox, Provider},\n  data() {\n    return {\n      lightboxOffset: 0,\n      MODAL_LIGHTBOX_CLASSNAME,\n      MODAL_CONTAINER_CLASSNAME,\n      MODAL_HITBOX_CLASSNAME,\n      MODAL_CARD_CLASSNAME\n    }\n  },\n  mounted() {\n    window.updateWeb3Modal = this\n  },\n  updated() {\n    if (this.$refs.lightboxRef) {\n      const lightboxRect = this.$refs.lightboxRef;\n      const lightboxOffset = lightboxRect.top > 0 ? lightboxRect.top : 0;\n\n      if (lightboxOffset !== this.lightboxOffset && lightboxOffset !== this.state.lightboxOffset\n      ) {\n        this.lightboxOffset = lightboxOffset\n      }\n    }\n  },\n  methods: {\n    onClose() {\n      this.$emit('onClose')\n    }\n  }\n}\n</script>\n<style scoped>\n.fade-enter-active, .fade-leave-active {\n  transition: opacity .25s;\n}\n\n.fade-enter, .fade-leave-to {\n  opacity: 0;\n}\n</style>"]}]}