{"remainingRequest":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/babel-loader/lib/index.js!/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/web3modal-vue/src/providers/connectors/mewconnect.js","dependencies":[{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/web3modal-vue/src/providers/connectors/mewconnect.js","mtime":1641967406422},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/babel.config.js","mtime":1641967012139},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/cache-loader/dist/cjs.js","mtime":1641967408297},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/babel-loader/lib/index.js","mtime":1641967408435}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9nYXV0aGFtZ3NhYmFoaXQvd29ya3NwYWNlL2pvaW50bmZ0L25mdC1jYWhvb3RzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0IHsgZ2V0Q2hhaW5JZCB9IGZyb20gIi4uLy4uL2hlbHBlcnMiOwoKdmFyIENvbm5lY3RUb01ld0Nvbm5lY3QgPSBmdW5jdGlvbiBDb25uZWN0VG9NZXdDb25uZWN0KE1ld0Nvbm5lY3RQcm92aWRlciwgb3B0cykgewogIHJldHVybiBuZXcgUHJvbWlzZSggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHJlc29sdmUsIHJlamVjdCkgewogICAgICB2YXIgaW5mdXJhSWQsIHJwYywgY2hhaW5JZCwgbWV3Q29ubmVjdCwgcHJvdmlkZXIsIGFkZHJlc3M7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBpbmZ1cmFJZCA9ICIiOwogICAgICAgICAgICAgIHJwYyA9IHVuZGVmaW5lZDsKICAgICAgICAgICAgICBjaGFpbklkID0gMTsKCiAgICAgICAgICAgICAgaWYgKG9wdHMpIHsKICAgICAgICAgICAgICAgIGluZnVyYUlkID0gb3B0cy5pbmZ1cmFJZCB8fCAiIjsKICAgICAgICAgICAgICAgIHJwYyA9IG9wdHMucnBjIHx8IHVuZGVmaW5lZDsKCiAgICAgICAgICAgICAgICBpZiAob3B0cy5pbmZ1cmFJZCAmJiAhcnBjKSB7CiAgICAgICAgICAgICAgICAgIHJwYyA9ICJ3c3M6Ly9tYWlubmV0LmluZnVyYS5pby93cy92My8iLmNvbmNhdChpbmZ1cmFJZCk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgY2hhaW5JZCA9IG9wdHMubmV0d29yayAmJiBnZXRDaGFpbklkKG9wdHMubmV0d29yaykgPyBnZXRDaGFpbklkKG9wdHMubmV0d29yaykgOiAxOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgaWYgKE1ld0Nvbm5lY3RQcm92aWRlci5Qcm92aWRlci5pc0Nvbm5lY3RlZCkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE5OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBtZXdDb25uZWN0ID0gbmV3IE1ld0Nvbm5lY3RQcm92aWRlci5Qcm92aWRlcigpOwogICAgICAgICAgICAgIHByb3ZpZGVyID0gbWV3Q29ubmVjdC5tYWtlV2ViM1Byb3ZpZGVyKGNoYWluSWQsIHJwYywgdHJ1ZSk7CiAgICAgICAgICAgICAgbWV3Q29ubmVjdC5vbignZGlzY29ubmVjdGVkJywgZnVuY3Rpb24gKCkge30pOwogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA4OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMTsKICAgICAgICAgICAgICByZXR1cm4gbWV3Q29ubmVjdC5lbmFibGUoKTsKCiAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgYWRkcmVzcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coYWRkcmVzcyk7IC8vIHRvZG8gcmVtb3ZlIGRldiBpdGVtCgogICAgICAgICAgICAgIHJlc29sdmUocHJvdmlkZXIpOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxOTsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE2OwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oOCk7CiAgICAgICAgICAgICAgcmVqZWN0KF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgIGNhc2UgMTk6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbOCwgMTZdXSk7CiAgICB9KSk7CgogICAgcmV0dXJuIGZ1bmN0aW9uIChfeCwgX3gyKSB7CiAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9OwogIH0oKSk7Cn07CgpleHBvcnQgZGVmYXVsdCBDb25uZWN0VG9NZXdDb25uZWN0Ow=="},{"version":3,"sources":["/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/web3modal-vue/src/providers/connectors/mewconnect.js"],"names":["getChainId","ConnectToMewConnect","MewConnectProvider","opts","Promise","resolve","reject","infuraId","rpc","undefined","chainId","network","Provider","isConnected","mewConnect","provider","makeWeb3Provider","on","enable","address","console","log"],"mappings":";;;AAAA,SAAQA,UAAR,QAAyB,eAAzB;;AACA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CACxBC,kBADwB,EAExBC,IAFwB,EAGvB;AACD,SAAO,IAAIC,OAAJ;AAAA,uEAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,cAAAA,QADW,GACA,EADA;AAEXC,cAAAA,GAFW,GAELC,SAFK;AAGXC,cAAAA,OAHW,GAGD,CAHC;;AAIf,kBAAIP,IAAJ,EAAU;AACNI,gBAAAA,QAAQ,GAAGJ,IAAI,CAACI,QAAL,IAAiB,EAA5B;AACAC,gBAAAA,GAAG,GAAGL,IAAI,CAACK,GAAL,IAAYC,SAAlB;;AACA,oBAAIN,IAAI,CAACI,QAAL,IAAiB,CAACC,GAAtB,EAA2B;AACvBA,kBAAAA,GAAG,2CAAoCD,QAApC,CAAH;AACH;;AACDG,gBAAAA,OAAO,GACHP,IAAI,CAACQ,OAAL,IAAgBX,UAAU,CAACG,IAAI,CAACQ,OAAN,CAA1B,GAA2CX,UAAU,CAACG,IAAI,CAACQ,OAAN,CAArD,GAAsE,CAD1E;AAEH;;AAZc,kBAaVT,kBAAkB,CAACU,QAAnB,CAA4BC,WAblB;AAAA;AAAA;AAAA;;AAcLC,cAAAA,UAdK,GAcQ,IAAIZ,kBAAkB,CAACU,QAAvB,EAdR;AAeLG,cAAAA,QAfK,GAeMD,UAAU,CAACE,gBAAX,CAA4BN,OAA5B,EAAqCF,GAArC,EAA0C,IAA1C,CAfN;AAiBXM,cAAAA,UAAU,CAACG,EAAX,CAAc,cAAd,EAA8B,YAAM,CACnC,CADD;AAjBW;AAAA;AAAA,qBAoBeH,UAAU,CAACI,MAAX,EApBf;;AAAA;AAoBDC,cAAAA,OApBC;AAqBPC,cAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EArBO,CAqBe;;AACtBd,cAAAA,OAAO,CAACU,QAAD,CAAP;AAtBO;AAAA;;AAAA;AAAA;AAAA;AAwBPT,cAAAA,MAAM,aAAN;;AAxBO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA,MAAP;AA6BH,CAjCD;;AAmCA,eAAeL,mBAAf","sourcesContent":["import {getChainId} from \"../../helpers\";\nconst ConnectToMewConnect = (\n    MewConnectProvider,\n    opts\n) => {\n    return new Promise(async (resolve, reject) => {\n        let infuraId = \"\";\n        let rpc = undefined;\n        let chainId = 1;\n        if (opts) {\n            infuraId = opts.infuraId || \"\";\n            rpc = opts.rpc || undefined;\n            if (opts.infuraId && !rpc) {\n                rpc = `wss://mainnet.infura.io/ws/v3/${infuraId}`\n            }\n            chainId =\n                opts.network && getChainId(opts.network) ? getChainId(opts.network) : 1;\n        }\n        if (!MewConnectProvider.Provider.isConnected) {\n            const mewConnect = new MewConnectProvider.Provider();\n            const provider = mewConnect.makeWeb3Provider(chainId, rpc, true)\n\n            mewConnect.on('disconnected', () => {\n            })\n            try {\n                const address = await mewConnect.enable();\n                console.log(address); // todo remove dev item\n                resolve(provider);\n            } catch (e) {\n                reject(e);\n            }\n        }\n\n    });\n};\n\nexport default ConnectToMewConnect;"]}]}