{"remainingRequest":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/babel-loader/lib/index.js!/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/web3modal-vue/src/controllers/providers.js","dependencies":[{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/web3modal-vue/src/controllers/providers.js","mtime":1641967406431},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/babel.config.js","mtime":1641967012139},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/cache-loader/dist/cjs.js","mtime":1641967408297},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/babel-loader/lib/index.js","mtime":1641967408435}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/web3modal-vue/src/controllers/providers.js"],"names":["list","CACHED_PROVIDER_KEY","CONNECT_EVENT","ERROR_EVENT","INJECTED_PROVIDER_ID","filterMatches","findMatchingRequiredOptions","getInjectedProvider","getLocal","getProviderDescription","getProviderInfoById","isMobile","removeLocal","setLocal","EventController","ProviderController","opts","eventController","cachedProvider","disableInjectedProvider","shouldCacheProvider","cacheProvider","providerOptions","network","injectedProvider","providers","Object","keys","connectors","map","id","providerInfo","FALLBACK","options","display","connector","filter","key","startsWith","push","provider","getProvider","providerPackageOptions","isProvided","requiredOptions","required","undefined","length","providedOptions","matches","mobile","defaultProviderList","displayInjected","onlyInjected","providerList","forEach","result","shouldDisplayProvider","userOptions","name","logo","description","onClick","connectTo","x","providerPackage","getProviderOption","trigger","setCachedProvider","event","callback","on","off"],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,IAAZ,MAAsB,cAAtB;AACA,SAAQC,mBAAR,EAA6BC,aAA7B,EAA4CC,WAA5C,EAAyDC,oBAAzD,QAAoF,cAApF;AACA,SACIC,aADJ,EAEIC,2BAFJ,EAGIC,mBAHJ,EAIIC,QAJJ,EAKIC,sBALJ,EAMIC,mBANJ,EAOIC,QAPJ,EAQIC,WARJ,EASIC,QATJ,QAUO,YAVP;AAWA,SAAQC,eAAR,QAA8B,UAA9B;AAEA,WAAaC,kBAAb;AACI,8BAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd,SAAKC,eAAL,GAAuB,IAAIH,eAAJ,EAAvB;AACA,SAAKI,cAAL,GAAsBV,QAAQ,CAACP,mBAAD,CAAR,IAAiC,EAAvD;AACA,SAAKkB,uBAAL,GAA+BH,IAAI,CAACG,uBAApC;AACA,SAAKC,mBAAL,GAA2BJ,IAAI,CAACK,aAAhC;AACA,SAAKC,eAAL,GAAuBN,IAAI,CAACM,eAA5B;AACA,SAAKC,OAAL,GAAeP,IAAI,CAACO,OAApB;AACA,SAAKC,gBAAL,GAAwBjB,mBAAmB,EAA3C;AAGA,SAAKkB,SAAL,GAAiBC,MAAM,CAACC,IAAP,CAAY3B,IAAI,CAAC4B,UAAjB,EAA6BC,GAA7B,CAAiC,UAACC,EAAD,EAAQ;AACtD,UAAIC,YAAJ;;AACA,UAAID,EAAE,KAAK1B,oBAAX,EAAiC;AAC7B2B,QAAAA,YAAY,GAAG,KAAI,CAACP,gBAAL,IAAyBxB,IAAI,CAACyB,SAAL,CAAeO,QAAvD;AACH,OAFD,MAEO;AACHD,QAAAA,YAAY,GAAGrB,mBAAmB,CAACoB,EAAD,CAAlC;AACH,OANqD,CAOtD;;;AACA,UAAI,KAAI,CAACR,eAAL,CAAqBQ,EAArB,CAAJ,EAA8B;AAC1B,YAAMG,OAAO,GAAG,KAAI,CAACX,eAAL,CAAqBQ,EAArB,CAAhB;;AACA,YAAI,OAAOG,OAAO,CAACC,OAAf,KAA2B,WAA/B,EAA4C;AACxCH,UAAAA,YAAY,mCACLA,YADK,GAEL,KAAI,CAACT,eAAL,CAAqBQ,EAArB,EAAyBI,OAFpB,CAAZ;AAIH;AACJ;;AACD,6CACOH,YADP;AAEII,QAAAA,SAAS,EAAEnC,IAAI,CAAC4B,UAAL,CAAgBE,EAAhB,CAFf;AAGI,mBAASC,YAAY;AAHzB;AAKH,KAtBgB,CAAjB,CAVc,CAiCd;;AACAL,IAAAA,MAAM,CAACC,IAAP,CAAY,KAAKL,eAAjB,EACKc,MADL,CACY,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,UAAJ,CAAe,SAAf,CAAJ;AAAA,KADf,EAEKT,GAFL,CAES,UAAAC,EAAE,EAAI;AACP,UAAIA,EAAE,IAAI,KAAI,CAACR,eAAL,CAAqBQ,EAArB,CAAV,EAAoC;AAChC,YAAMG,OAAO,GAAG,KAAI,CAACX,eAAL,CAAqBQ,EAArB,CAAhB;;AACA,YACI,OAAOG,OAAO,CAACC,OAAf,KAA2B,WAA3B,IACA,OAAOD,OAAO,CAACE,SAAf,KAA6B,WAFjC,EAGE;AACE,UAAA,KAAI,CAACV,SAAL,CAAec,IAAf,+CACOvC,IAAI,CAACyB,SAAL,CAAeO,QADtB;AAEIF,YAAAA,EAAE,EAAFA;AAFJ,aAGOG,OAAO,CAACC,OAHf;AAIIC,YAAAA,SAAS,EAAEF,OAAO,CAACE;AAJvB;AAMH;AACJ;AACJ,KAjBL;AAkBH;;AArDL;AAAA;AAAA,WAuDI,+BAAsBL,EAAtB,EAA0B;AACtB,UAAMU,QAAQ,GAAG,KAAKC,WAAL,CAAiBX,EAAjB,CAAjB;;AACA,UAAI,OAAOU,QAAP,KAAoB,WAAxB,EAAqC;AACjC,YAAME,sBAAsB,GAAG,KAAKpB,eAAL,CAAqBQ,EAArB,CAA/B;;AACA,YAAIY,sBAAJ,EAA4B;AACxB,cAAMC,UAAU,GAAG,CAAC,CAACD,sBAAsB,WAA3C;;AACA,cAAIC,UAAJ,EAAgB;AACZ,gBAAMC,eAAe,GAAGJ,QAAQ,WAAR,GAClBA,QAAQ,WAAR,CAAiBK,QADC,GAElBC,SAFN;;AAGA,gBAAIF,eAAe,IAAIA,eAAe,CAACG,MAAvC,EAA+C;AAC3C,kBAAMC,eAAe,GAAGN,sBAAsB,CAACT,OAA/C;;AACA,kBAAIe,eAAe,IAAItB,MAAM,CAACC,IAAP,CAAYqB,eAAZ,EAA6BD,MAApD,EAA4D;AACxD,oBAAME,OAAO,GAAG3C,2BAA2B,CACvCsC,eADuC,EAEvCI,eAFuC,CAA3C;;AAIA,oBAAIJ,eAAe,CAACG,MAAhB,KAA2BE,OAAO,CAACF,MAAvC,EAA+C;AAC3C,yBAAO,IAAP;AACH;AACJ;AACJ,aAXD,MAWO;AACH,qBAAO,IAAP;AACH;AACJ;AACJ;AACJ;;AACD,aAAO,KAAP;AACH;AAnFL;AAAA;AAAA,WAqFI,0BAAiB;AAAA;;AACb,UAAMG,MAAM,GAAGvC,QAAQ,EAAvB;AAEA,UAAMwC,mBAAmB,GAAG,KAAK1B,SAAL,CAAeI,GAAf,CAAmB;AAAA,YAAEC,EAAF,QAAEA,EAAF;AAAA,eAAUA,EAAV;AAAA,OAAnB,CAA5B;AAEA,UAAMsB,eAAe,GACjB,CAAC,CAAC,KAAK5B,gBAAP,IAA2B,CAAC,KAAKL,uBADrC;AAEA,UAAMkC,YAAY,GAAGD,eAAe,IAAIF,MAAxC;AAEA,UAAMI,YAAY,GAAG,EAArB;;AAEA,UAAID,YAAJ,EAAkB;AACdC,QAAAA,YAAY,CAACf,IAAb,CAAkBnC,oBAAlB;AACH,OAFD,MAEO;AACH,YAAIgD,eAAJ,EAAqB;AACjBE,UAAAA,YAAY,CAACf,IAAb,CAAkBnC,oBAAlB;AACH;;AAED+C,QAAAA,mBAAmB,CAACI,OAApB,CAA4B,UAACzB,EAAD,EAAQ;AAChC,cAAIA,EAAE,KAAK1B,oBAAX,EAAiC;AAC7B,gBAAMoD,MAAM,GAAG,MAAI,CAACC,qBAAL,CAA2B3B,EAA3B,CAAf;;AACA,gBAAI0B,MAAJ,EAAY;AACRF,cAAAA,YAAY,CAACf,IAAb,CAAkBT,EAAlB;AACH;AACJ;AACJ,SAPD;AAQH;;AAED,UAAM4B,WAAW,GAAG,EAApB;AAGAJ,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAACzB,EAAD,EAAQ;AACzB,YAAIU,QAAQ,GAAG,MAAI,CAACC,WAAL,CAAiBX,EAAjB,CAAf;;AAEA,YAAI,OAAOU,QAAP,KAAoB,WAAxB,EAAqC;AACjC,cAAOV,GAAP,GAAoCU,QAApC,CAAOV,EAAP;AAAA,cAAW6B,IAAX,GAAoCnB,QAApC,CAAWmB,IAAX;AAAA,cAAiBC,IAAjB,GAAoCpB,QAApC,CAAiBoB,IAAjB;AAAA,cAAuBzB,SAAvB,GAAoCK,QAApC,CAAuBL,SAAvB;AACAuB,UAAAA,WAAW,CAACnB,IAAZ,CAAiB;AACboB,YAAAA,IAAI,EAAJA,IADa;AAEbC,YAAAA,IAAI,EAAJA,IAFa;AAGbC,YAAAA,WAAW,EAAEpD,sBAAsB,CAAC+B,QAAD,CAHtB;AAIbsB,YAAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACC,SAAL,CAAejC,GAAf,EAAmBK,SAAnB,CAAN;AAAA;AAJI,WAAjB;AAMH;AACJ,OAZD;AAaA,aAAOuB,WAAP;AACH;AAlIL;AAAA;AAAA,WAoII,qBAAY5B,EAAZ,EAAgB;AACZ,aAAOzB,aAAa,CAChB,KAAKoB,SADW,EAEhB,UAAAuC,CAAC;AAAA,eAAIA,CAAC,CAAClC,EAAF,KAASA,EAAb;AAAA,OAFe,EAGhBgB,SAHgB,CAApB;AAKH;AA1IL;AAAA;AAAA,WA4II,2BAAkBhB,EAAlB,EAAsBO,GAAtB,EAA2B;AACvB,aAAO,KAAKf,eAAL,IACP,KAAKA,eAAL,CAAqBQ,EAArB,CADO,IAEP,KAAKR,eAAL,CAAqBQ,EAArB,EAAyBO,GAAzB,CAFO,GAGD,KAAKf,eAAL,CAAqBQ,EAArB,EAAyBO,GAAzB,CAHC,GAID,EAJN;AAKH;AAlJL;AAAA;AAAA,WAoJI,+BAAsB;AAClB,WAAKnB,cAAL,GAAsB,EAAtB;AACAN,MAAAA,WAAW,CAACX,mBAAD,CAAX;AACH;AAvJL;AAAA;AAAA,WAyJI,2BAAkB6B,EAAlB,EAAsB;AAClB,WAAKZ,cAAL,GAAsBY,EAAtB;AACAjB,MAAAA,QAAQ,CAACZ,mBAAD,EAAsB6B,EAAtB,CAAR;AACH;AA5JL;AAAA;AAAA;AAAA,+EA8JI,iBAAgBA,EAAhB,EAAoBK,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc8B,gBAAAA,eAFd,GAEgC,KAAKC,iBAAL,CAAuBpC,EAAvB,EAA2B,SAA3B,CAFhC;AAGcR,gBAAAA,eAHd,GAGgC,KAAK4C,iBAAL,CAAuBpC,EAAvB,EAA2B,SAA3B,CAHhC;AAIcd,gBAAAA,IAJd;AAIsBO,kBAAAA,OAAO,EAAE,KAAKA,OAAL,IAAgBuB;AAJ/C,mBAI6DxB,eAJ7D;AAAA;AAAA,uBAK+Ba,SAAS,CAAC8B,eAAD,EAAkBjD,IAAlB,CALxC;;AAAA;AAKcwB,gBAAAA,QALd;AAMQ,qBAAKvB,eAAL,CAAqBkD,OAArB,CAA6BjE,aAA7B,EAA4CsC,QAA5C;;AACA,oBAAI,KAAKpB,mBAAL,IAA4B,KAAKF,cAAL,KAAwBY,EAAxD,EAA4D;AACxD,uBAAKsC,iBAAL,CAAuBtC,EAAvB;AACH;;AATT;AAAA;;AAAA;AAAA;AAAA;AAWQ,qBAAKb,eAAL,CAAqBkD,OAArB,CAA6BhE,WAA7B;;AAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA9JJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6FA6KI;AAAA;AAAA;AAAA;AAAA;AAAA;AACUqC,gBAAAA,QADV,GACqB,KAAKC,WAAL,CAAiB,KAAKvB,cAAtB,CADrB;;AAAA,sBAEQ,OAAOsB,QAAP,KAAoB,WAF5B;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAGc,KAAKuB,SAAL,CAAevB,QAAQ,CAACV,EAAxB,EAA4BU,QAAQ,CAACL,SAArC,CAHd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA7KJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,WAoLI,YAAGkC,KAAH,EAAUC,QAAV,EAAoB;AAAA;;AAChB,WAAKrD,eAAL,CAAqBsD,EAArB,CAAwB;AACpBF,QAAAA,KAAK,EAALA,KADoB;AAEpBC,QAAAA,QAAQ,EAARA;AAFoB,OAAxB;AAKA,aAAO;AAAA,eACH,MAAI,CAACrD,eAAL,CAAqBuD,GAArB,CAAyB;AACrBH,UAAAA,KAAK,EAALA,KADqB;AAErBC,UAAAA,QAAQ,EAARA;AAFqB,SAAzB,CADG;AAAA,OAAP;AAKH;AA/LL;AAAA;AAAA,WAiMI,aAAID,KAAJ,EAAWC,QAAX,EAAqB;AACjB,WAAKrD,eAAL,CAAqBuD,GAArB,CAAyB;AACrBH,QAAAA,KAAK,EAALA,KADqB;AAErBC,QAAAA,QAAQ,EAARA;AAFqB,OAAzB;AAIH;AAtML;;AAAA;AAAA","sourcesContent":["import * as list from \"../providers\";\nimport {CACHED_PROVIDER_KEY, CONNECT_EVENT, ERROR_EVENT, INJECTED_PROVIDER_ID} from \"../constants\";\nimport {\n    filterMatches,\n    findMatchingRequiredOptions,\n    getInjectedProvider,\n    getLocal,\n    getProviderDescription,\n    getProviderInfoById,\n    isMobile,\n    removeLocal,\n    setLocal\n} from \"../helpers\";\nimport {EventController} from \"./events\";\n\nexport class ProviderController {\n    constructor(opts) {\n        this.eventController = new EventController();\n        this.cachedProvider = getLocal(CACHED_PROVIDER_KEY) || \"\";\n        this.disableInjectedProvider = opts.disableInjectedProvider;\n        this.shouldCacheProvider = opts.cacheProvider;\n        this.providerOptions = opts.providerOptions;\n        this.network = opts.network;\n        this.injectedProvider = getInjectedProvider();\n\n\n        this.providers = Object.keys(list.connectors).map((id) => {\n            let providerInfo;\n            if (id === INJECTED_PROVIDER_ID) {\n                providerInfo = this.injectedProvider || list.providers.FALLBACK;\n            } else {\n                providerInfo = getProviderInfoById(id);\n            }\n            // parse custom display options\n            if (this.providerOptions[id]) {\n                const options = this.providerOptions[id];\n                if (typeof options.display !== \"undefined\") {\n                    providerInfo = {\n                        ...providerInfo,\n                        ...this.providerOptions[id].display\n                    };\n                }\n            }\n            return {\n                ...providerInfo,\n                connector: list.connectors[id],\n                package: providerInfo.package\n            };\n        });\n        // parse custom providers\n        Object.keys(this.providerOptions)\n            .filter(key => key.startsWith(\"custom-\"))\n            .map(id => {\n                if (id && this.providerOptions[id]) {\n                    const options = this.providerOptions[id];\n                    if (\n                        typeof options.display !== \"undefined\" &&\n                        typeof options.connector !== \"undefined\"\n                    ) {\n                        this.providers.push({\n                            ...list.providers.FALLBACK,\n                            id,\n                            ...options.display,\n                            connector: options.connector\n                        });\n                    }\n                }\n            });\n    }\n\n    shouldDisplayProvider(id) {\n        const provider = this.getProvider(id);\n        if (typeof provider !== \"undefined\") {\n            const providerPackageOptions = this.providerOptions[id];\n            if (providerPackageOptions) {\n                const isProvided = !!providerPackageOptions.package;\n                if (isProvided) {\n                    const requiredOptions = provider.package\n                        ? provider.package.required\n                        : undefined;\n                    if (requiredOptions && requiredOptions.length) {\n                        const providedOptions = providerPackageOptions.options;\n                        if (providedOptions && Object.keys(providedOptions).length) {\n                            const matches = findMatchingRequiredOptions(\n                                requiredOptions,\n                                providedOptions\n                            );\n                            if (requiredOptions.length === matches.length) {\n                                return true;\n                            }\n                        }\n                    } else {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    getUserOptions() {\n        const mobile = isMobile();\n\n        const defaultProviderList = this.providers.map(({id}) => id);\n\n        const displayInjected =\n            !!this.injectedProvider && !this.disableInjectedProvider;\n        const onlyInjected = displayInjected && mobile;\n\n        const providerList = [];\n\n        if (onlyInjected) {\n            providerList.push(INJECTED_PROVIDER_ID);\n        } else {\n            if (displayInjected) {\n                providerList.push(INJECTED_PROVIDER_ID);\n            }\n\n            defaultProviderList.forEach((id) => {\n                if (id !== INJECTED_PROVIDER_ID) {\n                    const result = this.shouldDisplayProvider(id);\n                    if (result) {\n                        providerList.push(id);\n                    }\n                }\n            });\n        }\n\n        const userOptions = [];\n\n\n        providerList.forEach((id) => {\n            let provider = this.getProvider(id);\n\n            if (typeof provider !== \"undefined\") {\n                const {id, name, logo, connector} = provider;\n                userOptions.push({\n                    name,\n                    logo,\n                    description: getProviderDescription(provider),\n                    onClick: () => this.connectTo(id, connector)\n                });\n            }\n        });\n        return userOptions;\n    };\n\n    getProvider(id) {\n        return filterMatches(\n            this.providers,\n            x => x.id === id,\n            undefined\n        );\n    }\n\n    getProviderOption(id, key) {\n        return this.providerOptions &&\n        this.providerOptions[id] &&\n        this.providerOptions[id][key]\n            ? this.providerOptions[id][key]\n            : {};\n    }\n\n    clearCachedProvider() {\n        this.cachedProvider = \"\";\n        removeLocal(CACHED_PROVIDER_KEY);\n    }\n\n    setCachedProvider(id) {\n        this.cachedProvider = id;\n        setLocal(CACHED_PROVIDER_KEY, id);\n    }\n\n    async connectTo(id, connector) {\n        try {\n            const providerPackage = this.getProviderOption(id, \"package\");\n            const providerOptions = this.getProviderOption(id, \"options\");\n            const opts = {network: this.network || undefined, ...providerOptions};\n            const provider = await connector(providerPackage, opts);\n            this.eventController.trigger(CONNECT_EVENT, provider);\n            if (this.shouldCacheProvider && this.cachedProvider !== id) {\n                this.setCachedProvider(id);\n            }\n        } catch (error) {\n            this.eventController.trigger(ERROR_EVENT);\n        }\n    };\n\n    async connectToCachedProvider() {\n        const provider = this.getProvider(this.cachedProvider);\n        if (typeof provider !== \"undefined\") {\n            await this.connectTo(provider.id, provider.connector);\n        }\n    }\n\n    on(event, callback) {\n        this.eventController.on({\n            event,\n            callback\n        });\n\n        return () =>\n            this.eventController.off({\n                event,\n                callback\n            });\n    }\n\n    off(event, callback) {\n        this.eventController.off({\n            event,\n            callback\n        });\n    }\n}\n"]}]}