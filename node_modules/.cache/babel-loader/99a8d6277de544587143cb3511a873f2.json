{"remainingRequest":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/babel-loader/lib/index.js!/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/web3modal-vue/src/providers/connectors/injected.js","dependencies":[{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/web3modal-vue/src/providers/connectors/injected.js","mtime":1641967406388},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/babel.config.js","mtime":1641967012139},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/cache-loader/dist/cjs.js","mtime":1641967408297},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/babel-loader/lib/index.js","mtime":1641967408435}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9nYXV0aGFtZ3NhYmFoaXQvd29ya3NwYWNlL2pvaW50bmZ0L25mdC1jYWhvb3RzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwoKdmFyIENvbm5lY3RUb0luamVjdGVkID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgIHZhciBwcm92aWRlcjsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgcHJvdmlkZXIgPSBudWxsOwoKICAgICAgICAgICAgaWYgKCEodHlwZW9mIHdpbmRvdy5ldGhlcmV1bSAhPT0gJ3VuZGVmaW5lZCcpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEzOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBwcm92aWRlciA9IHdpbmRvdy5ldGhlcmV1bTsKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDM7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICByZXR1cm4gcHJvdmlkZXIucmVxdWVzdCh7CiAgICAgICAgICAgICAgbWV0aG9kOiAnZXRoX3JlcXVlc3RBY2NvdW50cycKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDg7CiAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMyk7CiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigiVXNlciBSZWplY3RlZCIpOwoKICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxODsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgaWYgKCF3aW5kb3cud2ViMykgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNzsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcHJvdmlkZXIgPSB3aW5kb3cud2ViMy5jdXJyZW50UHJvdmlkZXI7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxODsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJObyBXZWIzIFByb3ZpZGVyIGZvdW5kIik7CgogICAgICAgICAgY2FzZSAxODoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcHJvdmlkZXIpOwoKICAgICAgICAgIGNhc2UgMTk6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSwgbnVsbCwgW1szLCA4XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIENvbm5lY3RUb0luamVjdGVkKCkgewogICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7CgpleHBvcnQgZGVmYXVsdCBDb25uZWN0VG9JbmplY3RlZDs="},{"version":3,"sources":["/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/web3modal-vue/src/providers/connectors/injected.js"],"names":["ConnectToInjected","provider","window","ethereum","request","method","Error","web3","currentProvider"],"mappings":";;;AAAA,IAAMA,iBAAiB;AAAA,qEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,YAAAA,QADkB,GACP,IADO;;AAAA,kBAElB,OAAOC,MAAM,CAACC,QAAd,KAA2B,WAFT;AAAA;AAAA;AAAA;;AAGlBF,YAAAA,QAAQ,GAAGC,MAAM,CAACC,QAAlB;AAHkB;AAAA;AAAA,mBAKRF,QAAQ,CAACG,OAAT,CAAiB;AAACC,cAAAA,MAAM,EAAE;AAAT,aAAjB,CALQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,kBAOR,IAAIC,KAAJ,CAAU,eAAV,CAPQ;;AAAA;AAAA;AAAA;;AAAA;AAAA,iBASXJ,MAAM,CAACK,IATI;AAAA;AAAA;AAAA;;AAUlBN,YAAAA,QAAQ,GAAGC,MAAM,CAACK,IAAP,CAAYC,eAAvB;AAVkB;AAAA;;AAAA;AAAA,kBAYZ,IAAIF,KAAJ,CAAU,wBAAV,CAZY;;AAAA;AAAA,6CAcfL,QAde;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBD,iBAAiB;AAAA;AAAA;AAAA,GAAvB;;AAiBA,eAAeA,iBAAf","sourcesContent":["const ConnectToInjected = async () => {\n    let provider = null;\n    if (typeof window.ethereum !== 'undefined') {\n        provider = window.ethereum;\n        try {\n            await provider.request({method: 'eth_requestAccounts'})\n        } catch (error) {\n            throw new Error(\"User Rejected\");\n        }\n    } else if (window.web3) {\n        provider = window.web3.currentProvider;\n    } else {\n        throw new Error(\"No Web3 Provider found\");\n    }\n    return provider;\n};\n\nexport default ConnectToInjected;\n"]}]}