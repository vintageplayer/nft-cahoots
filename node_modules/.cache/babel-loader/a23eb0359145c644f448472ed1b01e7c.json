{"remainingRequest":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/babel-loader/lib/index.js!/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/web3modal-vue/src/providers/connectors/walletconnect.js","dependencies":[{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/web3modal-vue/src/providers/connectors/walletconnect.js","mtime":1641967406469},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/babel.config.js","mtime":1641967012139},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/cache-loader/dist/cjs.js","mtime":1641967408297},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/babel-loader/lib/index.js","mtime":1641967408435}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9nYXV0aGFtZ3NhYmFoaXQvd29ya3NwYWNlL2pvaW50bmZ0L25mdC1jYWhvb3RzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0IHsgZ2V0Q2hhaW5JZCB9IGZyb20gIi4uLy4uL2hlbHBlcnMiOwoKdmFyIENvbm5lY3RUb1dhbGxldENvbm5lY3QgPSBmdW5jdGlvbiBDb25uZWN0VG9XYWxsZXRDb25uZWN0KFdhbGxldENvbm5lY3RQcm92aWRlciwgb3B0cykgewogIHJldHVybiBuZXcgUHJvbWlzZSggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHJlc29sdmUsIHJlamVjdCkgewogICAgICB2YXIgYnJpZGdlLCBxcmNvZGUsIGluZnVyYUlkLCBycGMsIGNoYWluSWQsIHFyY29kZU1vZGFsT3B0aW9ucywgcHJvdmlkZXI7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBicmlkZ2UgPSAiaHR0cHM6Ly9icmlkZ2Uud2FsbGV0Y29ubmVjdC5vcmciOwogICAgICAgICAgICAgIHFyY29kZSA9IHRydWU7CiAgICAgICAgICAgICAgaW5mdXJhSWQgPSAiIjsKICAgICAgICAgICAgICBycGMgPSB1bmRlZmluZWQ7CiAgICAgICAgICAgICAgY2hhaW5JZCA9IDE7CiAgICAgICAgICAgICAgcXJjb2RlTW9kYWxPcHRpb25zID0gdW5kZWZpbmVkOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJ3YWxsZXQgY29ubmVjdCIpOyAvLyB0b2RvIHJlbW92ZSBkZXYgaXRlbQoKICAgICAgICAgICAgICBpZiAob3B0cykgewogICAgICAgICAgICAgICAgYnJpZGdlID0gb3B0cy5icmlkZ2UgfHwgYnJpZGdlOwogICAgICAgICAgICAgICAgcXJjb2RlID0gdHlwZW9mIG9wdHMucXJjb2RlICE9PSAidW5kZWZpbmVkIiA/IG9wdHMucXJjb2RlIDogcXJjb2RlOwogICAgICAgICAgICAgICAgaW5mdXJhSWQgPSBvcHRzLmluZnVyYUlkIHx8ICIiOwogICAgICAgICAgICAgICAgcnBjID0gb3B0cy5ycGMgfHwgdW5kZWZpbmVkOwogICAgICAgICAgICAgICAgY2hhaW5JZCA9IG9wdHMubmV0d29yayAmJiBnZXRDaGFpbklkKG9wdHMubmV0d29yaykgPyBnZXRDaGFpbklkKG9wdHMubmV0d29yaykgOiAxOwogICAgICAgICAgICAgICAgcXJjb2RlTW9kYWxPcHRpb25zID0gb3B0cy5xcmNvZGVNb2RhbE9wdGlvbnMgfHwgdW5kZWZpbmVkOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcHJvdmlkZXIgPSBuZXcgV2FsbGV0Q29ubmVjdFByb3ZpZGVyKHsKICAgICAgICAgICAgICAgIGJyaWRnZTogYnJpZGdlLAogICAgICAgICAgICAgICAgcXJjb2RlOiBxcmNvZGUsCiAgICAgICAgICAgICAgICBpbmZ1cmFJZDogaW5mdXJhSWQsCiAgICAgICAgICAgICAgICBycGM6IHJwYywKICAgICAgICAgICAgICAgIGNoYWluSWQ6IGNoYWluSWQsCiAgICAgICAgICAgICAgICBxcmNvZGVNb2RhbE9wdGlvbnM6IHFyY29kZU1vZGFsT3B0aW9ucwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA5OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMjsKICAgICAgICAgICAgICByZXR1cm4gcHJvdmlkZXIuZW5hYmxlKCk7CgogICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIHJlc29sdmUocHJvdmlkZXIpOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxODsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE1OwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oOSk7CiAgICAgICAgICAgICAgcmVqZWN0KF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbOSwgMTVdXSk7CiAgICB9KSk7CgogICAgcmV0dXJuIGZ1bmN0aW9uIChfeCwgX3gyKSB7CiAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9OwogIH0oKSk7Cn07CgpleHBvcnQgZGVmYXVsdCBDb25uZWN0VG9XYWxsZXRDb25uZWN0Ow=="},{"version":3,"sources":["/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/web3modal-vue/src/providers/connectors/walletconnect.js"],"names":["getChainId","ConnectToWalletConnect","WalletConnectProvider","opts","Promise","resolve","reject","bridge","qrcode","infuraId","rpc","undefined","chainId","qrcodeModalOptions","console","log","network","provider","enable"],"mappings":";;;AAAA,SAAQA,UAAR,QAAyB,eAAzB;;AAGA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,qBAAD,EAAwBC,IAAxB,EAAiC;AAC5D,SAAO,IAAIC,OAAJ;AAAA,uEAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,cAAAA,MADW,GACF,kCADE;AAEXC,cAAAA,MAFW,GAEF,IAFE;AAGXC,cAAAA,QAHW,GAGA,EAHA;AAIXC,cAAAA,GAJW,GAILC,SAJK;AAKXC,cAAAA,OALW,GAKD,CALC;AAMXC,cAAAA,kBANW,GAMUF,SANV;AAOfG,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAPe,CAOgB;;AAC/B,kBAAIZ,IAAJ,EAAU;AACNI,gBAAAA,MAAM,GAAGJ,IAAI,CAACI,MAAL,IAAeA,MAAxB;AACAC,gBAAAA,MAAM,GAAG,OAAOL,IAAI,CAACK,MAAZ,KAAuB,WAAvB,GAAqCL,IAAI,CAACK,MAA1C,GAAmDA,MAA5D;AACAC,gBAAAA,QAAQ,GAAGN,IAAI,CAACM,QAAL,IAAiB,EAA5B;AACAC,gBAAAA,GAAG,GAAGP,IAAI,CAACO,GAAL,IAAYC,SAAlB;AACAC,gBAAAA,OAAO,GACHT,IAAI,CAACa,OAAL,IAAgBhB,UAAU,CAACG,IAAI,CAACa,OAAN,CAA1B,GAA2ChB,UAAU,CAACG,IAAI,CAACa,OAAN,CAArD,GAAsE,CAD1E;AAEAH,gBAAAA,kBAAkB,GAAGV,IAAI,CAACU,kBAAL,IAA2BF,SAAhD;AACH;;AAEKM,cAAAA,QAlBS,GAkBE,IAAIf,qBAAJ,CAA0B;AACvCK,gBAAAA,MAAM,EAANA,MADuC;AAEvCC,gBAAAA,MAAM,EAANA,MAFuC;AAGvCC,gBAAAA,QAAQ,EAARA,QAHuC;AAIvCC,gBAAAA,GAAG,EAAHA,GAJuC;AAKvCE,gBAAAA,OAAO,EAAPA,OALuC;AAMvCC,gBAAAA,kBAAkB,EAAlBA;AANuC,eAA1B,CAlBF;AAAA;AAAA;AAAA,qBA2BLI,QAAQ,CAACC,MAAT,EA3BK;;AAAA;AA4BXb,cAAAA,OAAO,CAACY,QAAD,CAAP;AA5BW;AAAA;;AAAA;AAAA;AAAA;AA8BXX,cAAAA,MAAM,aAAN;;AA9BW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA,MAAP;AAiCH,CAlCD;;AAoCA,eAAeL,sBAAf","sourcesContent":["import {getChainId} from \"../../helpers\";\n\n\nconst ConnectToWalletConnect = (WalletConnectProvider, opts) => {\n    return new Promise(async (resolve, reject) => {\n        let bridge = \"https://bridge.walletconnect.org\";\n        let qrcode = true;\n        let infuraId = \"\";\n        let rpc = undefined;\n        let chainId = 1;\n        let qrcodeModalOptions = undefined;\n        console.log(\"wallet connect\"); // todo remove dev item\n        if (opts) {\n            bridge = opts.bridge || bridge;\n            qrcode = typeof opts.qrcode !== \"undefined\" ? opts.qrcode : qrcode;\n            infuraId = opts.infuraId || \"\";\n            rpc = opts.rpc || undefined;\n            chainId =\n                opts.network && getChainId(opts.network) ? getChainId(opts.network) : 1;\n            qrcodeModalOptions = opts.qrcodeModalOptions || undefined;\n        }\n\n        const provider = new WalletConnectProvider({\n            bridge,\n            qrcode,\n            infuraId,\n            rpc,\n            chainId,\n            qrcodeModalOptions\n        });\n        try {\n            await provider.enable()\n            resolve(provider);\n        } catch (e) {\n            reject(e);\n        }\n    });\n};\n\nexport default ConnectToWalletConnect;\n"]}]}