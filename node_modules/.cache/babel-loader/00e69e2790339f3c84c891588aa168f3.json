{"remainingRequest":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/babel-loader/lib/index.js!/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/web3modal-vue/src/providers/connectors/walletconnect.js","dependencies":[{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/web3modal-vue/src/providers/connectors/walletconnect.js","mtime":1641967406469},{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/babel.config.js","mtime":1641967012139},{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/cache-loader/dist/cjs.js","mtime":1641967408297},{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/babel-loader/lib/index.js","mtime":1641967408435}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9nYXV0aGFtZ3NhYmFoaXQvd29ya3NwYWNlL2pvaW50bmZ0L2pvaW50bmZ0LWRhcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgeyBnZXRDaGFpbklkIH0gZnJvbSAiLi4vLi4vaGVscGVycyI7Cgp2YXIgQ29ubmVjdFRvV2FsbGV0Q29ubmVjdCA9IGZ1bmN0aW9uIENvbm5lY3RUb1dhbGxldENvbm5lY3QoV2FsbGV0Q29ubmVjdFByb3ZpZGVyLCBvcHRzKSB7CiAgcmV0dXJuIG5ldyBQcm9taXNlKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIHZhciBicmlkZ2UsIHFyY29kZSwgaW5mdXJhSWQsIHJwYywgY2hhaW5JZCwgcXJjb2RlTW9kYWxPcHRpb25zLCBwcm92aWRlcjsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGJyaWRnZSA9ICJodHRwczovL2JyaWRnZS53YWxsZXRjb25uZWN0Lm9yZyI7CiAgICAgICAgICAgICAgcXJjb2RlID0gdHJ1ZTsKICAgICAgICAgICAgICBpbmZ1cmFJZCA9ICIiOwogICAgICAgICAgICAgIHJwYyA9IHVuZGVmaW5lZDsKICAgICAgICAgICAgICBjaGFpbklkID0gMTsKICAgICAgICAgICAgICBxcmNvZGVNb2RhbE9wdGlvbnMgPSB1bmRlZmluZWQ7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coIndhbGxldCBjb25uZWN0Iik7IC8vIHRvZG8gcmVtb3ZlIGRldiBpdGVtCgogICAgICAgICAgICAgIGlmIChvcHRzKSB7CiAgICAgICAgICAgICAgICBicmlkZ2UgPSBvcHRzLmJyaWRnZSB8fCBicmlkZ2U7CiAgICAgICAgICAgICAgICBxcmNvZGUgPSB0eXBlb2Ygb3B0cy5xcmNvZGUgIT09ICJ1bmRlZmluZWQiID8gb3B0cy5xcmNvZGUgOiBxcmNvZGU7CiAgICAgICAgICAgICAgICBpbmZ1cmFJZCA9IG9wdHMuaW5mdXJhSWQgfHwgIiI7CiAgICAgICAgICAgICAgICBycGMgPSBvcHRzLnJwYyB8fCB1bmRlZmluZWQ7CiAgICAgICAgICAgICAgICBjaGFpbklkID0gb3B0cy5uZXR3b3JrICYmIGdldENoYWluSWQob3B0cy5uZXR3b3JrKSA/IGdldENoYWluSWQob3B0cy5uZXR3b3JrKSA6IDE7CiAgICAgICAgICAgICAgICBxcmNvZGVNb2RhbE9wdGlvbnMgPSBvcHRzLnFyY29kZU1vZGFsT3B0aW9ucyB8fCB1bmRlZmluZWQ7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBwcm92aWRlciA9IG5ldyBXYWxsZXRDb25uZWN0UHJvdmlkZXIoewogICAgICAgICAgICAgICAgYnJpZGdlOiBicmlkZ2UsCiAgICAgICAgICAgICAgICBxcmNvZGU6IHFyY29kZSwKICAgICAgICAgICAgICAgIGluZnVyYUlkOiBpbmZ1cmFJZCwKICAgICAgICAgICAgICAgIHJwYzogcnBjLAogICAgICAgICAgICAgICAgY2hhaW5JZDogY2hhaW5JZCwKICAgICAgICAgICAgICAgIHFyY29kZU1vZGFsT3B0aW9uczogcXJjb2RlTW9kYWxPcHRpb25zCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDk7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEyOwogICAgICAgICAgICAgIHJldHVybiBwcm92aWRlci5lbmFibGUoKTsKCiAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgcmVzb2x2ZShwcm92aWRlcik7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE4OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTU7CiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSg5KTsKICAgICAgICAgICAgICByZWplY3QoX2NvbnRleHQudDApOwoKICAgICAgICAgICAgY2FzZSAxODoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1s5LCAxNV1dKTsKICAgIH0pKTsKCiAgICByZXR1cm4gZnVuY3Rpb24gKF94LCBfeDIpIHsKICAgICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH07CiAgfSgpKTsKfTsKCmV4cG9ydCBkZWZhdWx0IENvbm5lY3RUb1dhbGxldENvbm5lY3Q7"},{"version":3,"sources":["/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/web3modal-vue/src/providers/connectors/walletconnect.js"],"names":["getChainId","ConnectToWalletConnect","WalletConnectProvider","opts","Promise","resolve","reject","bridge","qrcode","infuraId","rpc","undefined","chainId","qrcodeModalOptions","console","log","network","provider","enable"],"mappings":";;;AAAA,SAAQA,UAAR,QAAyB,eAAzB;;AAGA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,qBAAD,EAAwBC,IAAxB,EAAiC;AAC5D,SAAO,IAAIC,OAAJ;AAAA,uEAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,cAAAA,MADW,GACF,kCADE;AAEXC,cAAAA,MAFW,GAEF,IAFE;AAGXC,cAAAA,QAHW,GAGA,EAHA;AAIXC,cAAAA,GAJW,GAILC,SAJK;AAKXC,cAAAA,OALW,GAKD,CALC;AAMXC,cAAAA,kBANW,GAMUF,SANV;AAOfG,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAPe,CAOgB;;AAC/B,kBAAIZ,IAAJ,EAAU;AACNI,gBAAAA,MAAM,GAAGJ,IAAI,CAACI,MAAL,IAAeA,MAAxB;AACAC,gBAAAA,MAAM,GAAG,OAAOL,IAAI,CAACK,MAAZ,KAAuB,WAAvB,GAAqCL,IAAI,CAACK,MAA1C,GAAmDA,MAA5D;AACAC,gBAAAA,QAAQ,GAAGN,IAAI,CAACM,QAAL,IAAiB,EAA5B;AACAC,gBAAAA,GAAG,GAAGP,IAAI,CAACO,GAAL,IAAYC,SAAlB;AACAC,gBAAAA,OAAO,GACHT,IAAI,CAACa,OAAL,IAAgBhB,UAAU,CAACG,IAAI,CAACa,OAAN,CAA1B,GAA2ChB,UAAU,CAACG,IAAI,CAACa,OAAN,CAArD,GAAsE,CAD1E;AAEAH,gBAAAA,kBAAkB,GAAGV,IAAI,CAACU,kBAAL,IAA2BF,SAAhD;AACH;;AAEKM,cAAAA,QAlBS,GAkBE,IAAIf,qBAAJ,CAA0B;AACvCK,gBAAAA,MAAM,EAANA,MADuC;AAEvCC,gBAAAA,MAAM,EAANA,MAFuC;AAGvCC,gBAAAA,QAAQ,EAARA,QAHuC;AAIvCC,gBAAAA,GAAG,EAAHA,GAJuC;AAKvCE,gBAAAA,OAAO,EAAPA,OALuC;AAMvCC,gBAAAA,kBAAkB,EAAlBA;AANuC,eAA1B,CAlBF;AAAA;AAAA;AAAA,qBA2BLI,QAAQ,CAACC,MAAT,EA3BK;;AAAA;AA4BXb,cAAAA,OAAO,CAACY,QAAD,CAAP;AA5BW;AAAA;;AAAA;AAAA;AAAA;AA8BXX,cAAAA,MAAM,aAAN;;AA9BW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA,MAAP;AAiCH,CAlCD;;AAoCA,eAAeL,sBAAf","sourcesContent":["import {getChainId} from \"../../helpers\";\n\n\nconst ConnectToWalletConnect = (WalletConnectProvider, opts) => {\n    return new Promise(async (resolve, reject) => {\n        let bridge = \"https://bridge.walletconnect.org\";\n        let qrcode = true;\n        let infuraId = \"\";\n        let rpc = undefined;\n        let chainId = 1;\n        let qrcodeModalOptions = undefined;\n        console.log(\"wallet connect\"); // todo remove dev item\n        if (opts) {\n            bridge = opts.bridge || bridge;\n            qrcode = typeof opts.qrcode !== \"undefined\" ? opts.qrcode : qrcode;\n            infuraId = opts.infuraId || \"\";\n            rpc = opts.rpc || undefined;\n            chainId =\n                opts.network && getChainId(opts.network) ? getChainId(opts.network) : 1;\n            qrcodeModalOptions = opts.qrcodeModalOptions || undefined;\n        }\n\n        const provider = new WalletConnectProvider({\n            bridge,\n            qrcode,\n            infuraId,\n            rpc,\n            chainId,\n            qrcodeModalOptions\n        });\n        try {\n            await provider.enable()\n            resolve(provider);\n        } catch (e) {\n            reject(e);\n        }\n    });\n};\n\nexport default ConnectToWalletConnect;\n"]}]}