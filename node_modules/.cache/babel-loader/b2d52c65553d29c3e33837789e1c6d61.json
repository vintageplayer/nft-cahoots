{"remainingRequest":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/thread-loader/dist/cjs.js!/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/babel-loader/lib/index.js!/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/web3modal-vue/src/providers/connectors/injected.js","dependencies":[{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/web3modal-vue/src/providers/connectors/injected.js","mtime":1641967406388},{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/babel.config.js","mtime":1641967012139},{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/cache-loader/dist/cjs.js","mtime":1641967408297},{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/thread-loader/dist/cjs.js","mtime":1641967405545},{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/babel-loader/lib/index.js","mtime":1641967408435}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9nYXV0aGFtZ3NhYmFoaXQvd29ya3NwYWNlL2pvaW50bmZ0L2pvaW50bmZ0LWRhcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7Cgp2YXIgQ29ubmVjdFRvSW5qZWN0ZWQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgdmFyIHByb3ZpZGVyOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBwcm92aWRlciA9IG51bGw7CgogICAgICAgICAgICBpZiAoISh0eXBlb2Ygd2luZG93LmV0aGVyZXVtICE9PSAndW5kZWZpbmVkJykpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHByb3ZpZGVyID0gd2luZG93LmV0aGVyZXVtOwogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMzsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgIHJldHVybiBwcm92aWRlci5yZXF1ZXN0KHsKICAgICAgICAgICAgICBtZXRob2Q6ICdldGhfcmVxdWVzdEFjY291bnRzJwogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gODsKICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgzKTsKICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJVc2VyIFJlamVjdGVkIik7CgogICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE4OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICBpZiAoIXdpbmRvdy53ZWIzKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE3OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBwcm92aWRlciA9IHdpbmRvdy53ZWIzLmN1cnJlbnRQcm92aWRlcjsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE4OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoIk5vIFdlYjMgUHJvdmlkZXIgZm91bmQiKTsKCiAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBwcm92aWRlcik7CgogICAgICAgICAgY2FzZSAxOToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzMsIDhdXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gQ29ubmVjdFRvSW5qZWN0ZWQoKSB7CiAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsKCmV4cG9ydCBkZWZhdWx0IENvbm5lY3RUb0luamVjdGVkOw=="},{"version":3,"sources":["/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/web3modal-vue/src/providers/connectors/injected.js"],"names":["ConnectToInjected","provider","window","ethereum","request","method","Error","web3","currentProvider"],"mappings":";;;AAAA,IAAMA,iBAAiB;AAAA,qEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,YAAAA,QADkB,GACP,IADO;;AAAA,kBAElB,OAAOC,MAAM,CAACC,QAAd,KAA2B,WAFT;AAAA;AAAA;AAAA;;AAGlBF,YAAAA,QAAQ,GAAGC,MAAM,CAACC,QAAlB;AAHkB;AAAA;AAAA,mBAKRF,QAAQ,CAACG,OAAT,CAAiB;AAACC,cAAAA,MAAM,EAAE;AAAT,aAAjB,CALQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,kBAOR,IAAIC,KAAJ,CAAU,eAAV,CAPQ;;AAAA;AAAA;AAAA;;AAAA;AAAA,iBASXJ,MAAM,CAACK,IATI;AAAA;AAAA;AAAA;;AAUlBN,YAAAA,QAAQ,GAAGC,MAAM,CAACK,IAAP,CAAYC,eAAvB;AAVkB;AAAA;;AAAA;AAAA,kBAYZ,IAAIF,KAAJ,CAAU,wBAAV,CAZY;;AAAA;AAAA,6CAcfL,QAde;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBD,iBAAiB;AAAA;AAAA;AAAA,GAAvB;;AAiBA,eAAeA,iBAAf","sourcesContent":["const ConnectToInjected = async () => {\n    let provider = null;\n    if (typeof window.ethereum !== 'undefined') {\n        provider = window.ethereum;\n        try {\n            await provider.request({method: 'eth_requestAccounts'})\n        } catch (error) {\n            throw new Error(\"User Rejected\");\n        }\n    } else if (window.web3) {\n        provider = window.web3.currentProvider;\n    } else {\n        throw new Error(\"No Web3 Provider found\");\n    }\n    return provider;\n};\n\nexport default ConnectToInjected;\n"]}]}