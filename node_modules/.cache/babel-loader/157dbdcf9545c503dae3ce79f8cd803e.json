{"remainingRequest":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/babel-loader/lib/index.js!/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/web3modal-vue/src/providers/connectors/authereum.js","dependencies":[{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/web3modal-vue/src/providers/connectors/authereum.js","mtime":1641967406196},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/babel.config.js","mtime":1641967012139},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/cache-loader/dist/cjs.js","mtime":1641967408297},{"path":"/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/babel-loader/lib/index.js","mtime":1641967408435}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2dhdXRoYW1nc2FiYWhpdC93b3Jrc3BhY2Uvam9pbnRuZnQvbmZ0LWNhaG9vdHMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2dhdXRoYW1nc2FiYWhpdC93b3Jrc3BhY2Uvam9pbnRuZnQvbmZ0LWNhaG9vdHMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwoKdmFyIENvbm5lY3RUb0F1dGhlcmV1bSA9IGZ1bmN0aW9uIENvbm5lY3RUb0F1dGhlcmV1bShBdXRoZXJldW0pIHsKICB2YXIgb3B0cyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307CiAgcmV0dXJuIG5ldyBQcm9taXNlKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIHZhciBhdXRoZXJldW0sIHByb3ZpZGVyOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgYXV0aGVyZXVtID0gbmV3IEF1dGhlcmV1bShfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG9wdHMpLCB7fSwgewogICAgICAgICAgICAgICAgbmV0d29ya05hbWU6IG9wdHMubmV0d29ya05hbWUgfHwgb3B0cy5uZXR3b3JrCiAgICAgICAgICAgICAgfSkpOwogICAgICAgICAgICAgIHByb3ZpZGVyID0gYXV0aGVyZXVtLmdldFByb3ZpZGVyKCk7CiAgICAgICAgICAgICAgcHJvdmlkZXIuYXV0aGVyZXVtID0gYXV0aGVyZXVtOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgIHJldHVybiBwcm92aWRlci5lbmFibGUoKTsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICByZXNvbHZlKHByb3ZpZGVyKTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDk7CiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCByZWplY3QoX2NvbnRleHQudDApKTsKCiAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgOV1dKTsKICAgIH0pKTsKCiAgICByZXR1cm4gZnVuY3Rpb24gKF94LCBfeDIpIHsKICAgICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH07CiAgfSgpKTsKfTsKCmV4cG9ydCBkZWZhdWx0IENvbm5lY3RUb0F1dGhlcmV1bTs="},{"version":3,"sources":["/Users/gauthamgsabahit/workspace/jointnft/nft-cahoots/node_modules/web3modal-vue/src/providers/connectors/authereum.js"],"names":["ConnectToAuthereum","Authereum","opts","Promise","resolve","reject","authereum","networkName","network","provider","getProvider","enable"],"mappings":";;;;;AAAA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,SAAD,EAA0B;AAAA,MAAdC,IAAc,uEAAP,EAAO;AACjD,SAAO,IAAIC,OAAJ;AAAA,uEAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAELC,cAAAA,SAFK,GAEO,IAAIL,SAAJ,iCACXC,IADW;AAEdK,gBAAAA,WAAW,EAAEL,IAAI,CAACK,WAAL,IAAoBL,IAAI,CAACM;AAFxB,iBAFP;AAMLC,cAAAA,QANK,GAMMH,SAAS,CAACI,WAAV,EANN;AAOXD,cAAAA,QAAQ,CAACH,SAAT,GAAqBA,SAArB;AAPW;AAAA,qBAQLG,QAAQ,CAACE,MAAT,EARK;;AAAA;AASXP,cAAAA,OAAO,CAACK,QAAD,CAAP;AATW;AAAA;;AAAA;AAAA;AAAA;AAAA,+CAWJJ,MAAM,aAXF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA,MAAP;AAcH,CAfD;;AAiBA,eAAeL,kBAAf","sourcesContent":["const ConnectToAuthereum = (Authereum, opts = {}) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const authereum = new Authereum({\n                ...opts,\n                networkName: opts.networkName || opts.network\n            });\n            const provider = authereum.getProvider();\n            provider.authereum = authereum;\n            await provider.enable();\n            resolve(provider);\n        } catch (error) {\n            return reject(error);\n        }\n    });\n};\n\nexport default ConnectToAuthereum;"]}]}