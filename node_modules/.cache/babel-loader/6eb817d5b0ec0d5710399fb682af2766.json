{"remainingRequest":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/babel-loader/lib/index.js!/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/web3modal-vue/src/providers/connectors/authereum.js","dependencies":[{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/web3modal-vue/src/providers/connectors/authereum.js","mtime":1641967406196},{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/babel.config.js","mtime":1641967012139},{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/cache-loader/dist/cjs.js","mtime":1641967408297},{"path":"/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/babel-loader/lib/index.js","mtime":1641967408435}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2dhdXRoYW1nc2FiYWhpdC93b3Jrc3BhY2Uvam9pbnRuZnQvam9pbnRuZnQtZGFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvZ2F1dGhhbWdzYWJhaGl0L3dvcmtzcGFjZS9qb2ludG5mdC9qb2ludG5mdC1kYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKCnZhciBDb25uZWN0VG9BdXRoZXJldW0gPSBmdW5jdGlvbiBDb25uZWN0VG9BdXRoZXJldW0oQXV0aGVyZXVtKSB7CiAgdmFyIG9wdHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9OwogIHJldHVybiBuZXcgUHJvbWlzZSggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHJlc29sdmUsIHJlamVjdCkgewogICAgICB2YXIgYXV0aGVyZXVtLCBwcm92aWRlcjsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICAgIGF1dGhlcmV1bSA9IG5ldyBBdXRoZXJldW0oX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBvcHRzKSwge30sIHsKICAgICAgICAgICAgICAgIG5ldHdvcmtOYW1lOiBvcHRzLm5ldHdvcmtOYW1lIHx8IG9wdHMubmV0d29yawogICAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgICBwcm92aWRlciA9IGF1dGhlcmV1bS5nZXRQcm92aWRlcigpOwogICAgICAgICAgICAgIHByb3ZpZGVyLmF1dGhlcmV1bSA9IGF1dGhlcmV1bTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICByZXR1cm4gcHJvdmlkZXIuZW5hYmxlKCk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgcmVzb2x2ZShwcm92aWRlcik7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEyOwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA5OwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmVqZWN0KF9jb250ZXh0LnQwKSk7CgogICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDldXSk7CiAgICB9KSk7CgogICAgcmV0dXJuIGZ1bmN0aW9uIChfeCwgX3gyKSB7CiAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9OwogIH0oKSk7Cn07CgpleHBvcnQgZGVmYXVsdCBDb25uZWN0VG9BdXRoZXJldW07"},{"version":3,"sources":["/Users/gauthamgsabahit/workspace/jointnft/jointnft-dapp/node_modules/web3modal-vue/src/providers/connectors/authereum.js"],"names":["ConnectToAuthereum","Authereum","opts","Promise","resolve","reject","authereum","networkName","network","provider","getProvider","enable"],"mappings":";;;;;AAAA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,SAAD,EAA0B;AAAA,MAAdC,IAAc,uEAAP,EAAO;AACjD,SAAO,IAAIC,OAAJ;AAAA,uEAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAELC,cAAAA,SAFK,GAEO,IAAIL,SAAJ,iCACXC,IADW;AAEdK,gBAAAA,WAAW,EAAEL,IAAI,CAACK,WAAL,IAAoBL,IAAI,CAACM;AAFxB,iBAFP;AAMLC,cAAAA,QANK,GAMMH,SAAS,CAACI,WAAV,EANN;AAOXD,cAAAA,QAAQ,CAACH,SAAT,GAAqBA,SAArB;AAPW;AAAA,qBAQLG,QAAQ,CAACE,MAAT,EARK;;AAAA;AASXP,cAAAA,OAAO,CAACK,QAAD,CAAP;AATW;AAAA;;AAAA;AAAA;AAAA;AAAA,+CAWJJ,MAAM,aAXF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA,MAAP;AAcH,CAfD;;AAiBA,eAAeL,kBAAf","sourcesContent":["const ConnectToAuthereum = (Authereum, opts = {}) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const authereum = new Authereum({\n                ...opts,\n                networkName: opts.networkName || opts.network\n            });\n            const provider = authereum.getProvider();\n            provider.authereum = authereum;\n            await provider.enable();\n            resolve(provider);\n        } catch (error) {\n            return reject(error);\n        }\n    });\n};\n\nexport default ConnectToAuthereum;"]}]}