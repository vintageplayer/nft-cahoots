"use strict";

var _vue = _interopRequireDefault(require("vue"));

var _expect = _interopRequireDefault(require("expect"));

var _utils = require("./utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _templateObject11() {
  var data = _taggedTemplateLiteral(["\n      width: 50;\n    "]);

  _templateObject11 = function _templateObject11() {
    return data;
  };

  return data;
}

function _templateObject10() {
  var data = _taggedTemplateLiteral(["\n      width: 50;\n    "]);

  _templateObject10 = function _templateObject10() {
    return data;
  };

  return data;
}

function _templateObject9() {
  var data = _taggedTemplateLiteral(["\n      width: 50;\n    "]);

  _templateObject9 = function _templateObject9() {
    return data;
  };

  return data;
}

function _templateObject8() {
  var data = _taggedTemplateLiteral(["\n      width: 50;\n    "]);

  _templateObject8 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7() {
  var data = _taggedTemplateLiteral(["\n      width: 50;\n    "]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _taggedTemplateLiteral(["\n      width: 50;\n    "]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["\n      width: 50;\n    "]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["\n      width: 50;\n    "]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n      width: 50;\n    "]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n      width: 50;\n    "]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n      width: 50;\n    "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var styled;
describe('"attrs" feature', function () {
  beforeEach(function () {
    styled = (0, _utils.resetStyled)();
  });
  it('should add html attributes to an element', function () {
    var Component = styled('img', {}).attrs({
      src: 'image.jpg'
    })(_templateObject());
    var vm = new _vue["default"](Component).$mount();
    (0, _expect["default"])(vm._vnode.data.domProps).toEqual({
      src: 'image.jpg'
    });
  });
  it('should add several html attributes to an element', function () {
    var Component = styled('img', {}).attrs({
      src: 'image.jpg',
      alt: 'Test image'
    })(_templateObject2());
    var vm = new _vue["default"](Component).$mount();
    (0, _expect["default"])(vm._vnode.data.domProps).toEqual({
      src: 'image.jpg',
      alt: 'Test image'
    });
  });
  it('should work as expected with empty attributes object provided', function () {
    var Component = styled('img', {}).attrs({})(_templateObject3());
    var vm = new _vue["default"](Component).$mount();
    (0, _utils.expectCSSMatches)('.a {width: 50;}');
  });
  it('should work as expected with null attributes object provided', function () {
    var Component = styled('img', {}).attrs(null)(_templateObject4());
    var vm = new _vue["default"](Component).$mount();
    (0, _utils.expectCSSMatches)('.a {width: 50;}');
    (0, _expect["default"])(vm._vnode.data.domProps).toEqual({});
  });
  it('should work as expected without attributes provided', function () {
    var Component = styled('img')(_templateObject5());
    var vm = new _vue["default"](Component).$mount();
    (0, _utils.expectCSSMatches)('.a {width: 50;}');
    (0, _expect["default"])(vm._vnode.data.domProps).toEqual({});
  });
  it('should work with a function as a parameter of of the method', function () {
    var Component = styled('img', {}).attrs(function () {
      return {
        src: 'image.jpg',
        alt: 'Test image',
        height: '50'
      };
    })(_templateObject6());
    var vm = new _vue["default"](Component).$mount();
    (0, _expect["default"])(vm._vnode.data.domProps).toEqual({
      src: 'image.jpg',
      alt: 'Test image',
      height: '50'
    });
  });
  it('should work with multiple attrs method call', function () {
    var Component = styled('img', {}).attrs(function () {
      return {
        src: 'image.jpg',
        alt: 'Test image'
      };
    }).attrs({
      height: '50'
    })(_templateObject7());
    var vm = new _vue["default"](Component).$mount();
    (0, _expect["default"])(vm._vnode.data.domProps).toEqual({
      src: 'image.jpg',
      alt: 'Test image',
      height: '50'
    });
  });
  it('should access to all previous attribute properties', function () {
    var Component = styled('img', {}).attrs(function () {
      return {
        src: 'image',
        alt: 'My test image'
      };
    }).attrs(function (props) {
      return {
        src: props.src + '.jpg',
        height: 5 * 10
      };
    })(_templateObject8());
    var vm = new _vue["default"](Component).$mount();
    (0, _expect["default"])(vm._vnode.data.domProps).toEqual({
      src: 'image.jpg',
      alt: 'My test image',
      height: 50
    });
  });
  it('should override attribute properties', function () {
    var Component = styled('img', {}).attrs(function () {
      return {
        src: 'image.jpg',
        alt: 'Test image',
        height: '20'
      };
    }).attrs({
      height: '50'
    })(_templateObject9());
    var vm = new _vue["default"](Component).$mount();
    (0, _expect["default"])(vm._vnode.data.domProps).toEqual({
      src: 'image.jpg',
      alt: 'Test image',
      height: '50'
    });
  });
  it('should access to component props', function () {
    var Component = styled('img', {
      propsHeight: Number
    }).attrs(function (props) {
      return {
        src: 'image.jpg',
        alt: 'Test image',
        height: props.propsHeight * 2
      };
    })(_templateObject10());
    var vm = new _vue["default"]({
      render: function render(h) {
        return h(Component, {
          props: {
            propsHeight: 20
          }
        });
      }
    }).$mount();
    (0, _expect["default"])(vm.$children[0]._vnode.data.domProps).toEqual({
      src: 'image.jpg',
      alt: 'Test image',
      height: 40
    });
  });
  it('attributes should be reactive', function () {
    var Component = styled('img', {
      propsHeight: Number
    }).attrs(function (props) {
      return {
        src: 'image.jpg',
        alt: 'Test image',
        height: props.propsHeight * 2
      };
    })(_templateObject11());
    var vm = new _vue["default"]({
      render: function render(h) {
        var self = this;
        return h(Component, {
          props: {
            propsHeight: self.dataHeight
          }
        });
      },
      data: function data() {
        return {
          dataHeight: 20
        };
      }
    }).$mount();
    (0, _expect["default"])(vm.$children[0]._vnode.data.domProps).toEqual({
      src: 'image.jpg',
      alt: 'Test image',
      height: 40
    });
    vm.dataHeight = 90;
    setTimeout(function () {
      (0, _expect["default"])(vm.$children[0]._vnode.data.domProps).toEqual({
        src: 'image.jpg',
        alt: 'Test image',
        height: 180
      });
    }, 0);
  });
});